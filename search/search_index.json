{
    "docs": [
        {
            "location": "/binary_core_tools/instrumentation/intel_pin/",
            "text": "intel pin\n\u00b6\n\n\n\u4ec0\u4e48\u662f pin\n\u00b6\n\n\npin \u662f intel \u5f00\u53d1\u7684\u4e00\u6b3e\u4e8c\u8fdb\u5236\u7a0b\u5e8f\u7684\u63d2\u6869\u5206\u6790\u5de5\u5177\uff0c\u652f\u6301 x86/x64 & windows/linux/mac\uff0c\u63d0\u4f9b\u4e86\u4e30\u5bcc\u7684 API \u4f9b\u4f7f\u7528\u8005\u7528 C/C++ \u7f16\u5199 pintool \u5206\u6790\u7a0b\u5e8f\n\n\n\u4ec0\u4e48\u662f\u63d2\u6869(instrument)\n\u00b6\n\n\n\u901a\u4fd7\u7684\u6765\u8bf4\uff0c\u63d2\u6869\u5c31\u662f\u5728\u5df2\u6709\u7684\u6e90\u4ee3\u7801/\u4e8c\u8fdb\u5236\u7a0b\u5e8f\u4e2d\u63d2\u5165\u67d0\u4e9b\u4ee3\u7801\u4ee5\u4fbf\u4e8e\u81ea\u5df1\u5206\u6790\uff0c\u6bd4\u5982\u5728\u8c03\u8bd5\u65f6\u4f7f\u7528 printf \u6253\u5370\u53d8\u91cf\u503c\u5c31\u5c5e\u4e8e\u5728\u6e90\u4ee3\u7801\u7ea7\u522b\u7684\u63d2\u6869\u3002\u800cintel pin\u5c31\u662f\u5728\u4e8c\u8fdb\u5236\u7a0b\u5e8f\u7ea7\u522b\uff08\u6ca1\u6709\u6e90\u4ee3\u7801\uff09\u63d2\u6869\u7684\u4e00\u6b3e\u5de5\u5177\n\n\npin \u548c pintool\n\u00b6\n\n\npin \u7684\u5b89\u88c5\uff0cpintool \u7684\u7f16\u8bd1\n\u00b6\n\n\npin \u7684\u5b89\u88c5\u5f88\u7b80\u5355\uff0c\u8fd9\u91cc\u4ee5 64 \u4f4d\u7684 Linux \u4e3a\u4f8b\u6765\u8bf4\u660e\uff0c\u4ece \n\u5b98\u7f51\n \u4e0a\u4e0b\u8f7d pin \u7ec4\u4ef6\u540e\uff0c\u89e3\u538b\u5373\u53ef\uff0c\u5728\u89e3\u538b\u540e\u7684\u6587\u4ef6\u5939\u5185\u6709\u7f16\u8bd1\u597d\u7684\u4e8c\u8fdb\u5236\u7a0b\u5e8f pin\n\n\npin-3.6-gcc-linux ls\ndoc  extlicense  extras  ia32  intel64  LICENSE  pin  README  redist.txt  \nsource\n\npin-3.6-gcc-linux file pin \npin: ELF \n32\n-bit LSB executable, Intel \n80386\n, version \n1\n \n(\nSYSV\n)\n, statically linked, BuildID\n[\nsha1\n]=\n7beaa83f9142955a6e933bf29d4a8aa1269298bc, stripped\npin-3.6-gcc-linux ./pin \nE: Missing application name\nPin: pin-3.6-97554-31f0a167d\nCopyright \n(\nc\n)\n \n2003\n-2017, Intel Corporation. All rights reserved.\n\nUsage: pin \n[\nOPTION\n]\n \n[\n-t <tool> \n[\n<toolargs>\n]]\n -- <\ncommand\n line>\nUse -help \nfor\n a description of options\n\n\n\n\n\u5728 \nsource/tools/ManualExamples\n \u4e2d\u6709\u4e00\u4e9b\u73b0\u6210\u7684 pintool \u53ef\u4ee5\u4f7f\u7528\uff0c\u57fa\u672c\u6db5\u76d6\u4e86\u5404\u4e2a\u6a21\u5757\u7684\u7528\u6cd5\uff0c\u8fd9\u91cc\u4ee5 inscount0 \u8fd9\u4e2a pintool \u4e3a\u4f8b\u4ecb\u7ecd pin \u7684\u4f7f\u7528\u65b9\u6cd5\n\n\npin-3.6-gcc-linux \ncd\n source/tools/ManualExamples\nManualExamples file inscount0.cpp\ninscount0.cpp: C source, ASCII text\nManualExamples make obj-intel64/inscount0.so \nTARGET\n=\nintel64\ng++ -Wall -Werror -Wno-unknown-pragmas -D__PIN__\n=\n1\n -DPIN_CRT\n=\n1\n -fno-stack-protector -fno-exceptions -funwind-tables -fasynchronous-unwind-tables -fno-rtti -DTARGET_IA32E -DHOST_IA32E -fPIC -DTARGET_LINUX -fabi-version\n=\n2\n  -I../../../source/include/pin -I../../../source/include/pin/gen -isystem /home/m4x/pin-3.6-gcc-linux/extras/stlport/include -isystem /home/m4x/pin-3.6-gcc-linux/extras/libstdc++/include -isystem /home/m4x/pin-3.6-gcc-linux/extras/crt/include -isystem /home/m4x/pin-3.6-gcc-linux/extras/crt/include/arch-x86_64 -isystem /home/m4x/pin-3.6-gcc-linux/extras/crt/include/kernel/uapi -isystem /home/m4x/pin-3.6-gcc-linux/extras/crt/include/kernel/uapi/asm-x86 -I../../../extras/components/include -I../../../extras/xed-intel64/include/xed -I../../../source/tools/InstLib -O3 -fomit-frame-pointer -fno-strict-aliasing   -c -o obj-intel64/inscount0.o inscount0.cpp\ng++ -shared -Wl,--hash-style\n=\nsysv ../../../intel64/runtime/pincrt/crtbeginS.o -Wl,-Bsymbolic -Wl,--version-script\n=\n../../../source/include/pin/pintool.ver -fabi-version\n=\n2\n    -o obj-intel64/inscount0.so obj-intel64/inscount0.o  -L../../../intel64/runtime/pincrt -L../../../intel64/lib -L../../../intel64/lib-ext -L../../../extras/xed-intel64/lib -lpin -lxed ../../../intel64/runtime/pincrt/crtendS.o -lpin3dwarf  -ldl-dynamic -nostdlib -lstlport-dynamic -lm-dynamic -lc-dynamic -lunwind-dynamic\nManualExamples file obj-intel64/inscount0.so \nobj-intel64/inscount0.so: ELF \n64\n-bit LSB shared object, x86-64, version \n1\n \n(\nSYSV\n)\n, dynamically linked, BuildID\n[\nsha1\n]=\n3baa29dd54235acaab02edc94bf9ac377dd7b0e5, not stripped\n\n\n\n\n\u6b64\u65f6\u5728 obj-intel64 \u4e0b\u7f16\u8bd1\u751f\u6210\u4e86 inscount0.so\uff0c\u8fd9\u4e2a so \u5373\u4e3a\u4e00\u79cd pintool\uff0c\u529f\u80fd\u4e3a\u8bb0\u5f55\u7a0b\u5e8f\u6267\u884c\u7684\u6307\u4ee4\u7684\u6761\u6570\uff1b\n\n\n\n\n\u5224\u65ad pintool \u7684\u529f\u80fd\u53ef\u4ee5\u9605\u8bfb pintool \u6e90\u4ee3\u7801\u6216\u8005\u4f7f\u7528\u4e0b\u6761\u6307\u4ee4\n\n\n$ pin -t your_pintool -h -- your_application\n\n\n\n\n\u7c7b\u4f3c\u7684\uff0c\u8981\u7f16\u8bd1 32 \u4f4d\u7684 pintool \u53ef\u4ee5\u4f7f\u7528\n\n\nmake obj-ia32/inscount0.so\n\n\n\n\n\u7f16\u8bd1 ManualExamples \u4e2d\u7684\u6240\u6709 pintool \u53ef\u4ee5\u4f7f\u7528\n\n\nmake all \nTAEGET\n=\nintel64\nmake all \nTAEGET\n=\nia32\n\n\n\n\npin \u7684\u4f7f\u7528\n\u00b6\n\n\npin \u7684\u57fa\u672c\u547d\u4ee4\u683c\u5f0f\u5982\u4e0b\n\n\npin -t your_pintool -- your_binary <arg> \n\n\n\n\n\u4ee5\u521a\u521a\u7f16\u8bd1\u7684 inscount0 \u8fd9\u4e2a pintool \u4e3a\u4f8b\n\n\nManualExamples ../../../pin -t ./obj-intel64/inscount0.so -- /bin/ls -a\n.              inscount2.cpp      obj-intel64\n..             inscount.out   pinatrace.cpp\nbuffer_linux.cpp       inscount_tls.cpp   pin.log\nbuffer_windows.cpp     invocation.cpp     proccount.cpp\ncountreps.cpp          isampling.cpp      replacesigprobed.cpp\ndetach.cpp         itrace.cpp     safecopy.cpp\ndivide_by_zero_unix.c  little_malloc.c    stack-debugger.cpp\ndivide_by_zero_win.c   logtrace.cpp   stack-debugger-tutorial.sln\nemudiv.cpp         makefile       stack-debugger-tutorial.vcxproj\nfibonacci.cpp          makefile.rules     stack-debugger-tutorial.vcxproj.filters\nfollow_child_app1.cpp  malloc.cpp     statica.cpp\nfollow_child_app2.cpp  malloc_mt.cpp      staticcount.cpp\nfollow_child_tool.cpp  malloctrace.cpp    strace.cpp\nfork_app.cpp           myInscount0.cpp    \ntest\n\nfork_jit_tool.cpp      myInscount1.cpp    test.c\nimageload.cpp          myMalloctrace.cpp  test-packed\ninscount0.cpp          nonstatica.cpp     tracer.cpp\ninscount1.cpp          obj-ia32       w_malloctrace.cpp\nManualExamples cat inscount.out \nCount \n813449\n\n\n\n\n\ninscount \u9ed8\u8ba4\u7ed3\u679c\u4fdd\u5b58\u5728 inscount.out \u8fd9\u4e2a\u6587\u4ef6\u4e2d\uff0c\u5728\u4e0a\u4f8b\u4e2d\uff0c\u5373\u6b64\u65f6 \nls -a\n \u8fd9\u6761\u547d\u4ee4\u5171\u6267\u884c\u4e86 813449 \u6761\u6307\u4ee4\n\n\npintool \u7684\u5206\u6790\n\u00b6\n\n\n\u540c\u6837\u4ee5 inscount0 \u4e3a\u4f8b\u5206\u6790\uff0c\u67e5\u770b inscount0.cpp \u7684\u5185\u5bb9\n\n\n#include\n \n<iostream>\n\n\n#include\n \n<fstream>\n\n\n#include\n \n\"pin.H\"\n\n\n\nofstream\n \nOutFile\n;\n\n\n\n// The running count of instructions is kept here\n\n\n// make it static to help the compiler optimize docount\n\n\nstatic\n \nUINT64\n \nicount\n \n=\n \n0\n;\n\n\n\n// This function is called before every instruction is executed\n\n\nVOID\n \ndocount\n()\n \n{\n \nicount\n++\n;\n \n}\n\n\n\n// Pin calls this function every time a new instruction is encountered\n\n\nVOID\n \nInstruction\n(\nINS\n \nins\n,\n \nVOID\n \n*\nv\n)\n\n\n{\n\n    \n// Insert a call to docount before every instruction, no arguments are passed\n\n    \nINS_InsertCall\n(\nins\n,\n \nIPOINT_BEFORE\n,\n \n(\nAFUNPTR\n)\ndocount\n,\n \nIARG_END\n);\n\n\n}\n\n\n\nKNOB\n<\nstring\n>\n \nKnobOutputFile\n(\nKNOB_MODE_WRITEONCE\n,\n \n\"pintool\"\n,\n\n    \n\"o\"\n,\n \n\"inscount.out\"\n,\n \n\"specify output file name\"\n);\n\n\n\n// This function is called when the application exits\n\n\nVOID\n \nFini\n(\nINT32\n \ncode\n,\n \nVOID\n \n*\nv\n)\n\n\n{\n\n    \n// Write to a file since cout and cerr maybe closed by the application\n\n    \nOutFile\n.\nsetf\n(\nios\n::\nshowbase\n);\n\n    \nOutFile\n \n<<\n \n\"Count \"\n \n<<\n \nicount\n \n<<\n \nendl\n;\n\n    \nOutFile\n.\nclose\n();\n\n\n}\n\n\n\n/* ===================================================================== */\n\n\n/* Print Help Message                                                    */\n\n\n/* ===================================================================== */\n\n\n\nINT32\n \nUsage\n()\n\n\n{\n\n    \ncerr\n \n<<\n \n\"This tool counts the number of dynamic instructions executed\"\n \n<<\n \nendl\n;\n\n    \ncerr\n \n<<\n \nendl\n \n<<\n \nKNOB_BASE\n::\nStringKnobSummary\n()\n \n<<\n \nendl\n;\n\n    \nreturn\n \n-\n1\n;\n\n\n}\n\n\n\n/* ===================================================================== */\n\n\n/* Main                                                                  */\n\n\n/* ===================================================================== */\n\n\n/*   argc, argv are the entire command line: pin -t <toolname> -- ...    */\n\n\n/* ===================================================================== */\n\n\n\nint\n \nmain\n(\nint\n \nargc\n,\n \nchar\n \n*\n \nargv\n[])\n\n\n{\n\n    \n// Initialize pin\n\n    \nif\n \n(\nPIN_Init\n(\nargc\n,\n \nargv\n))\n \nreturn\n \nUsage\n();\n\n\n    \nOutFile\n.\nopen\n(\nKnobOutputFile\n.\nValue\n().\nc_str\n());\n\n\n    \n// Register Instruction to be called to instrument instructions\n\n    \nINS_AddInstrumentFunction\n(\nInstruction\n,\n \n0\n);\n\n\n    \n// Register Fini to be called when the application exits\n\n    \nPIN_AddFiniFunction\n(\nFini\n,\n \n0\n);\n\n\n    \n// Start the program, never returns\n\n    \nPIN_StartProgram\n();\n\n\n    \nreturn\n \n0\n;\n\n\n}\n\n\n\n\n\n\u4ece main \u5f00\u59cb\uff0c\u9996\u5148\u8c03\u7528\u4e86 PIN_init\uff0853 \u884c\uff09\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u7136\u540e\u4f7f\u7528 INS_AddInstrumenFunction \u6ce8\u518c\u4e86\u4e00\u4e2a\u63d2\u6869\u51fd\u6570(58\u884c)\uff0c\u6839\u636e intel pin \u7684 \n\u7528\u6237\u624b\u518c\n\n\nPIN_CALLBACK\n \nLEVEL_PINCLIENT\n::\nINS_AddInstrumentFunction\n \n(\n   \nINS_INSTRUMENT_CALLBACK\n     \nfun\n,\n\n\nVOID\n \n*\n  \nval\n \n\n)\n       \n\nAdd\n \na\n \nfunction\n \nused\n \nto\n \ninstrument\n \nat\n \ninstruction\n \ngranularity\n\n\n\nParameters\n:\n\n\nfun\n \nInstrumentation\n \nfunction\n \nfor\n \ninstructions\n\n\nval\n \npassed\n \nas\n \nthe\n \nsecond\n \nargument\n \nto\n \nthe\n \ninstrumentation\n \nfunction\n\n\nReturns\n:\n\n\nPIN_CALLBACK\n \nA\n \nhandle\n \nto\n \na\n \ncallback\n \nthat\n \ncan\n \nbe\n \nused\n \nto\n \nfurther\n \nmodify\n \nthis\n \ncallback\n'\ns\n \nproperties\n\n\nNote\n:\n\n\nThe\n \npin\n \nclient\n \nlock\n \nis\n \nobtained\n \nduring\n \nthe\n \ncall\n \nof\n \nthis\n \nAPI\n.\n\n\nAvailability\n:\n\n\nMode\n:\n \nJIT\n\n\nO\n/\nS\n:\n \nLinux\n,\n \nWindows\n \n&\n \nOS\n \nX\n*\n\n\nCPU\n:\n \nAll\n\n\n\n\n\n\u5728\u8fd9\u91cc\u8be5\u51fd\u6570\u7684\u4f5c\u7528\u662f\u5728\u6307\u4ee4\u7c92\u5ea6\u63d2\u5165 Instruction \u51fd\u6570\uff0c\u5373\u5728\u6bcf\u6761\u6307\u4ee4\u6267\u884c\u524d\uff0c\u90fd\u4f1a\u8fdb\u5165 Instruction \u8fd9\u4e2a\u51fd\u6570\u4e2d\uff0c\u5176\u7b2c2\u4e2a\u53c2\u6570\u4e3a\u4e00\u4e2a\u989d\u5916\u4f20\u9012\u7ed9 Instruction \u7684\u53c2\u6570\uff0c\u5373\u5bf9\u5e94 \nVOID *v\n \u8fd9\u4e2a\u53c2\u6570\uff0c\u8fd9\u91cc\u6ca1\u6709\u4f7f\u7528\u3002\u800c Instruction \u63a5\u53d7\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u4e3a \nINS\n \u7ed3\u6784\uff0c\u7528\u6765\u8868\u793a\u4e00\u6761\u6307\u4ee4\n\n\n\u800c\u6211\u4eec\u518d\u770b Instruction \u8fd9\u4e2a\u51fd\u6570\n\n\nVOID\n \nInstruction\n(\nINS\n \nins\n,\n \nVOID\n \n*\nv\n)\n\n\n{\n\n    \n// Insert a call to docount before every instruction, no arguments are passed\n\n    \nINS_InsertCall\n(\nins\n,\n \nIPOINT_BEFORE\n,\n \n(\nAFUNPTR\n)\ndocount\n,\n \nIARG_END\n);\n\n\n}\n\n\n\n\n\n\u5728 Instruction \u51fd\u6570\u5185\u90e8\u53c8\u4f7f\u7528 INS_InsertCall \u6ce8\u518c\u4e86\u4e00\u4e2a\u51fd\u6570 docount\uff0c\u5373\u5728\u6bcf\u6761\u6307\u4ee4\u524d\u5b9e\u9645\u63d2\u5165\u4e86 docount \u8fd9\u4e2a\u51fd\u6570\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f INS_InsertCall \u8bd5\u4e00\u4e2a\u4fbf\u9910\u51fd\u6570\uff0c\u524d\u4e09\u4e2a\u53c2\u6570\u5206\u522b\u4e3a\u6307\u4ee4(ins)\uff0c\u63d2\u5165\u7684\u5b9e\u9645(IPOINT_BEFORE\uff0c\u8868\u793a\u5728\u6307\u4ee4\u8fd0\u884c\u4e4b\u524d\u63d2\u5165 docount \u51fd\u6570)\uff0c\u51fd\u6570\u6307\u9488(docount\uff0c\u8f6c\u5316\u4e3a\u4e86 AFUNPTR \u7c7b\u578b)\uff0c\u4e4b\u540e\u7684\u53c2\u6570\u4e3a\u4f20\u9012\u7ed9 docount \u51fd\u6570\u7684\u53c2\u6570\uff0c\u4ee5 IARG_END \u7ed3\u5c3e\n\n\n\u800c docount \u51fd\u6570\uff0812 \u884c\uff09\u7684\u4f5c\u7528\u5c31\u5f88\u660e\u663e\u4e86\uff0c\u6bcf\u6b21\u5c06\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf\u52a0 1\uff0c\u56e0\u6b64\u6b64\u65f6 /bin/ls -a \u8fd0\u884c\u7684\u6a21\u5f0f\u5982\u4e0b:\n\n\n...\nicount++;\nsub $0xff, %edx\nicount++;\ncmp %esi, %edx\nicount++;\njle <L1>\nicount++;\nmov $0x1, %edi\nicount++;\nadd $0x10, %eax\n...\n\n\n\n\n\u6240\u4ee5 inscount0 \u7684\u7528\u9014\u5c31\u5f88\u660e\u663e\u4e86\uff0c\u6bcf\u6761\u6307\u4ee4\u524d\u90fd\u8c03\u7528 docount \u51fd\u6570\u5c06\u5168\u5c40\u53d8\u91cf icount \u81ea\u589e\uff0c\u6700\u540e\u901a\u8fc7PIN_AddFiniFunction \u51fd\u6570\u6ce8\u518c\u7684 Fini \u51fd\u6570(25\u884c)\u5c06\u7ed3\u679c\u5199\u5230\u4e00\u4e2a\u6587\u4ef6\u4e2d\u3002\n\n\n\u5f53\u8fd9\u4e9b\u51fd\u6570\u90fd\u5b9a\u4e49\u5b8c\u540e\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528 PIN_StartProgram \u6765\u542f\u52a8\u7a0b\u5e8f\u4e86\n\n\n\u8fd9\u91cc\u5206\u6790\u4e86\u4e00\u4e2a\u6700\u7b80\u5355\u7684 pintool \u4f8b\u5b50\uff0c\u66f4\u591a pintool \u4f8b\u5b50\u7684\u5206\u6790\u548c\u5176\u4ed6\u51fd\u6570\u7684\u4f7f\u7528\u53ef\u4ee5\u53c2\u8003 BrieflyX \u7684 \n\u535a\u5ba2\n\n\npin in CTF\n\u00b6\n\n\n\u56e0\u4e3a\u52a8\u6001\u63d2\u6869\u6709\u4e0d\u91cd\u65b0\u7f16\u8bd1\u5373\u53ef\u6536\u96c6\u4e8c\u8fdb\u5236\u7a0b\u5e8f\u67d0\u4e9b\u4fe1\u606f\u7684\u7279\u6027\uff0c\u56e0\u6b64\u7528 pin \u6c42\u89e3**\u4e00\u90e8\u5206** CTF challenges \u4f1a\u5f02\u5e38\u7684\u65b9\u4fbf\uff0c\u4e0b\u8fb9\u7ed9\u51fa\u4e00\u4e9b\u4f8b\u5b50\u548c\u5206\u6790\n\n\nNDH2K13-crackme-500\n\u00b6\n\n\n\u9996\u5148\u7528\u5e38\u89c4\u65b9\u6cd5\u5bf9 crackme \u6587\u4ef6\u8fdb\u884c\u5206\u6790\n\n\nNDH2k13-crackme-500 \n[\nmaster\n]\n file crackme \ncrackme: ELF \n64\n-bit LSB executable, x86-64, invalid version \n(\nSYSV\n)\n, \nfor\n GNU/Linux \n2\n.6.9, statically linked, corrupted section header size\nNDH2k13-crackme-500 \n[\nmaster\n]\n nm ./crackme \n\nnm: out of memory allocating \n109524665216\n bytes after a total of \n0\n bytes\nNDH2k13-crackme-500 \n[\nmaster\n]\n objdump -d ./crackme -M intel\nobjdump: ./crackme: \u4e0d\u53ef\u8bc6\u522b\u7684\u6587\u4ef6\u683c\u5f0f\nNDH2k13-crackme-500 \n[\nmaster\n]\n ./crackme \nJonathan Salwan loves you <\n3\n\n----------------------------\n\nPassword: \ntest\n\nBad password\n\n\n\n\n\u53d1\u73b0 section header \u53d7\u5230\u4e86\u635f\u574f\uff0c\u7528 IDA \u6253\u5f00\u65f6\u4e5f\u6709\u5f88\u591a\u62a5\u9519\uff0c\u8fd9\u65f6\u6211\u4eec\u5c1d\u8bd5\u4f7f\u7528 intel pin \u6765\u6c42\u89e3\u8fd9\u9053\u9898\u76ee\uff0c\u5148\u4f7f\u7528\u6700\u5e38\u89c1\u7684\u7edf\u8ba1\u6307\u4ee4\u6761\u6570\u7684\u65b9\u6cd5\n\n\nNDH2k13-crackme-500 \n[\nmaster\n]\n ~/pin-3.6-gcc-linux/pin -t ./inscount0.so -- ./crackme \n<<<\n \n\"a\"\n >> /dev/null\n;\n cat inscount.out \nCount \n160345\n\nNDH2k13-crackme-500 \n[\nmaster\u25cf\n]\n ~/pin-3.6-gcc-linux/pin -t ./myInscount0.so -- ./crackme \n<<<\n \n\"a\"\n \nJonathan Salwan loves you <\n3\n\n----------------------------\n\nPassword: Bad password\nCount: \n163218\n\nNDH2k13-crackme-500 \n[\nmaster\u25cf\n]\n ~/pin-3.6-gcc-linux/pin -t ./myInscount0.so -- ./crackme \n<<<\n \n\"aa\"\n\nJonathan Salwan loves you <\n3\n\n----------------------------\n\nPassword: Bad password\nCount: \n166014\n\nNDH2k13-crackme-500 \n[\nmaster\u25cf\n]\n ~/pin-3.6-gcc-linux/pin -t ./myInscount0.so -- ./crackme \n<<<\n \n\"aaa\"\n\nJonathan Salwan loves you <\n3\n\n----------------------------\n\nPassword: Bad password\nCount: \n168810\n\nNDH2k13-crackme-500 \n[\nmaster\u25cf\n]\n ~/pin-3.6-gcc-linux/pin -t ./myInscount0.so -- ./crackme \n<<<\n \n\"aaaa\"\n\nJonathan Salwan loves you <\n3\n\n----------------------------\n\nPassword: Bad password\nCount: \n171606\n\nNDH2k13-crackme-500 \n[\nmaster\u25cf\n]\n ~/pin-3.6-gcc-linux/pin -t ./myInscount0.so -- ./crackme \n<<<\n \n\"aaaaa\"\n\nJonathan Salwan loves you <\n3\n\n----------------------------\n\nPassword: Bad password\nCount: \n174402\n\nNDH2k13-crackme-500 \n[\nmaster\u25cf\n]\n bpython\nbpython version \n0\n.17.1 on top of Python \n2\n.7.13+ /usr/bin/python2\n>>> \n174402\n - \n171606\n \n==\n \n171606\n - \n168810\n \n==\n \n168810\n - \n166014\n \n==\n \n166014\n - \n163218\n\nTrue\n>>> \n\n\n\n\n\u6b64\u65f6\u6211\u4eec\u53d1\u73b0\u4e86\u4e00\u4e2a\u5f88\u6709\u8da3\u7684\u7279\u6027\uff0c\u8f93\u5165\u957f\u5ea6\u6bcf\u6b21\u589e\u52a0 1 \u65f6\uff0c\u6307\u4ee4\u6761\u6570\u4e5f\u662f\u4ee5\u7b49\u5dee\u7684\u89c4\u6a21\u9012\u589e\u7684\n\n\n\n\nmyInscount0 \u662f\u6211\u5728 inscount0 \u7684\u57fa\u7840\u4e0a\u66f4\u6539\u7684 pintool\uff0c\u5b9e\u73b0\u4e86\u4ece\u7ed3\u679c\u4fdd\u5b58\u5230\u6587\u4ef6\u5230\u7ed3\u679c\u8f93\u51fa\u5230\u6807\u51c6\u8f93\u51fa\u7684\u4fee\u6539\n\n\n\n\n\u6211\u4eec\u5199\u4e00\u4e2a\u7b80\u5355\u7684\u811a\u672c\u67e5\u770b\u8f93\u5165\u957f\u5ea6\u9012\u589e\u65f6\uff0c\u6307\u4ee4\u6761\u6570\u7684\u53d8\u5316\u89c4\u5f8b\n\n\nNDH2k13\n-\ncrackme\n-\n500\n \n[\nmaster\n\u25cf\n]\n \ncat\n \nguessLen\n.\npy\n \n\n#!/usr/bin/env python\n\n\n# -*- coding: utf-8 -*-\n\n\n\nfrom\n \nsubprocess\n \nimport\n \nPopen\n,\n \nPIPE\n\n\nfrom\n \nsys\n \nimport\n \nargv\n\n\nimport\n \nstring\n\n\n\npinPath\n \n=\n \n\"/home/m4x/pin-3.6-gcc-linux/pin\"\n\n\npinInit\n \n=\n \nlambda\n \ntool\n,\n \nelf\n:\n \nPopen\n([\npinPath\n,\n \n'-t'\n,\n \ntool\n,\n \n'--'\n,\n \nelf\n],\n \nstdin\n \n=\n \nPIPE\n,\n \nstdout\n \n=\n \nPIPE\n)\n\n\npinWrite\n \n=\n \nlambda\n \ncont\n:\n \npin\n.\nstdin\n.\nwrite\n(\ncont\n)\n\n\npinRead\n \n=\n \nlambda\n \n:\n \npin\n.\ncommunicate\n()[\n0\n]\n\n\n\nif\n \n__name__\n \n==\n \n\"__main__\"\n:\n\n    \nlast\n \n=\n \n0\n\n    \nfor\n \ni\n \nin\n \nxrange\n(\n1\n,\n \n30\n):\n\n        \npin\n \n=\n \npinInit\n(\n\"./myInscount0.so\"\n,\n \n\"./crackme\"\n)\n\n        \npinWrite\n(\n\"a\"\n \n*\n \ni\n \n+\n \n'\n\\n\n'\n)\n\n        \nnow\n \n=\n \nint\n(\npinRead\n()\n.\nsplit\n(\n\"Count: \"\n)[\n1\n])\n\n\n        \nprint\n \n\"inputLen({:2d}) -> ins({}) -> delta({})\"\n.\nformat\n(\ni\n,\n \nnow\n,\n \nnow\n \n-\n \nlast\n)\n\n        \nlast\n \n=\n \nnow\n\n\n\n\n\n\u5728\u6211\u7535\u8111\u4e0a\u8fd0\u884c\u7ed3\u679c\u5982\u4e0b\uff1a\n\n\nNDH2k13\n-\ncrackme\n-\n500\n \n[\nmaster\n\u25cf\n]\n \npython\n \nguessLen\n.\npy\n \n\ninputLen\n(\n \n1\n)\n \n->\n \nins\n(\n160307\n)\n \n->\n \ndelta\n(\n160307\n)\n\n\ninputLen\n(\n \n2\n)\n \n->\n \nins\n(\n163103\n)\n \n->\n \ndelta\n(\n2796\n)\n\n\ninputLen\n(\n \n3\n)\n \n->\n \nins\n(\n165899\n)\n \n->\n \ndelta\n(\n2796\n)\n\n\ninputLen\n(\n \n4\n)\n \n->\n \nins\n(\n168695\n)\n \n->\n \ndelta\n(\n2796\n)\n\n\ninputLen\n(\n \n5\n)\n \n->\n \nins\n(\n171491\n)\n \n->\n \ndelta\n(\n2796\n)\n\n\ninputLen\n(\n \n6\n)\n \n->\n \nins\n(\n174287\n)\n \n->\n \ndelta\n(\n2796\n)\n\n\ninputLen\n(\n \n7\n)\n \n->\n \nins\n(\n177083\n)\n \n->\n \ndelta\n(\n2796\n)\n\n\ninputLen\n(\n \n8\n)\n \n->\n \nins\n(\n182804\n)\n \n->\n \ndelta\n(\n5721\n)\n\n\ninputLen\n(\n \n9\n)\n \n->\n \nins\n(\n182676\n)\n \n->\n \ndelta\n(\n-\n128\n)\n\n\ninputLen\n(\n10\n)\n \n->\n \nins\n(\n185472\n)\n \n->\n \ndelta\n(\n2796\n)\n\n\ninputLen\n(\n11\n)\n \n->\n \nins\n(\n188268\n)\n \n->\n \ndelta\n(\n2796\n)\n\n\ninputLen\n(\n12\n)\n \n->\n \nins\n(\n191064\n)\n \n->\n \ndelta\n(\n2796\n)\n\n\ninputLen\n(\n13\n)\n \n->\n \nins\n(\n193860\n)\n \n->\n \ndelta\n(\n2796\n)\n\n\ninputLen\n(\n14\n)\n \n->\n \nins\n(\n196656\n)\n \n->\n \ndelta\n(\n2796\n)\n\n\ninputLen\n(\n15\n)\n \n->\n \nins\n(\n199452\n)\n \n->\n \ndelta\n(\n2796\n)\n\n\ninputLen\n(\n16\n)\n \n->\n \nins\n(\n202248\n)\n \n->\n \ndelta\n(\n2796\n)\n\n\ninputLen\n(\n17\n)\n \n->\n \nins\n(\n205044\n)\n \n->\n \ndelta\n(\n2796\n)\n\n\ninputLen\n(\n18\n)\n \n->\n \nins\n(\n207840\n)\n \n->\n \ndelta\n(\n2796\n)\n\n\ninputLen\n(\n19\n)\n \n->\n \nins\n(\n210636\n)\n \n->\n \ndelta\n(\n2796\n)\n\n\ninputLen\n(\n20\n)\n \n->\n \nins\n(\n213432\n)\n \n->\n \ndelta\n(\n2796\n)\n\n\ninputLen\n(\n21\n)\n \n->\n \nins\n(\n216228\n)\n \n->\n \ndelta\n(\n2796\n)\n\n\ninputLen\n(\n22\n)\n \n->\n \nins\n(\n219024\n)\n \n->\n \ndelta\n(\n2796\n)\n\n\ninputLen\n(\n23\n)\n \n->\n \nins\n(\n221820\n)\n \n->\n \ndelta\n(\n2796\n)\n\n\ninputLen\n(\n24\n)\n \n->\n \nins\n(\n224616\n)\n \n->\n \ndelta\n(\n2796\n)\n\n\ninputLen\n(\n25\n)\n \n->\n \nins\n(\n227412\n)\n \n->\n \ndelta\n(\n2796\n)\n\n\ninputLen\n(\n26\n)\n \n->\n \nins\n(\n230208\n)\n \n->\n \ndelta\n(\n2796\n)\n\n\ninputLen\n(\n27\n)\n \n->\n \nins\n(\n244188\n)\n \n->\n \ndelta\n(\n13980\n)\n\n\ninputLen\n(\n28\n)\n \n->\n \nins\n(\n244188\n)\n \n->\n \ndelta\n(\n0\n)\n\n\ninputLen\n(\n29\n)\n \n->\n \nins\n(\n244188\n)\n \n->\n \ndelta\n(\n0\n)\n\n\n\n\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u5728\u8f93\u5165\u957f\u5ea6 <8 \u65f6\uff0c\u6307\u4ee4\u6761\u6570\u662f\u9012\u589e\u7684\uff0c\u4f46\u957f\u5ea6\u4e3a 8 \u4e0e\u957f\u5ea6\u4e3a 7 \u6bd4\u8f83\u53d1\u751f\u4e86\u7a81\u53d8\uff0c\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u5c31\u53ef\u4ee5\u5927\u80c6\u7684\u63a8\u6d4b\u5f53\u8f93\u5165\u957f\u5ea6\u4e3a 8 \u65f6\uff0c\u7a0b\u5e8f\u7684\u8fd0\u884c\u6d41\u7a0b\u6709\u4e86\u8f83\u5927\u7684\u53d8\u5316\uff0c\u6b63\u786e\u7684 flag \u957f\u5ea6\u5373\u4e3a 8\n\n\n\u6211\u4eec\u4ee5\u8f93\u5165\u957f\u5ea6\u662f 8 \u4e3a\u524d\u63d0\uff0c\u518d\u67e5\u770b\u4e0d\u540c\u8f93\u5165\u4e0b\u6307\u4ee4\u6761\u6570\u7684\u53d8\u5316\u89c4\u5f8b\n\n\nNDH2k13-crackme-500 \n[\nmaster\u25cf\n]\n ~/pin-3.6-gcc-linux/pin -t ./myInscount0.so -- ./crackme \n<<<\n \n\">???????\"\n\nJonathan Salwan loves you <\n3\n\n----------------------------\n\nPassword: Bad password\nCount: \n185714\n\nNDH2k13-crackme-500 \n[\nmaster\u25cf\n]\n ~/pin-3.6-gcc-linux/pin -t ./myInscount0.so -- ./crackme \n<<<\n \n\"????????\"\n\nJonathan Salwan loves you <\n3\n\n----------------------------\n\nPassword: Bad password\nCount: \n185714\n\nNDH2k13-crackme-500 \n[\nmaster\u25cf\n]\n ~/pin-3.6-gcc-linux/pin -t ./myInscount0.so -- ./crackme \n<<<\n \n\"@???????\"\n\nJonathan Salwan loves you <\n3\n\n----------------------------\n\nPassword: Bad password\nCount: \n185714\n\nNDH2k13-crackme-500 \n[\nmaster\u25cf\n]\n ~/pin-3.6-gcc-linux/pin -t ./myInscount0.so -- ./crackme \n<<<\n \n\"A???????\"\n\nJonathan Salwan loves you <\n3\n\n----------------------------\n\nPassword: Bad password\nCount: \n189752\n\nNDH2k13-crackme-500 \n[\nmaster\u25cf\n]\n ~/pin-3.6-gcc-linux/pin -t ./myInscount0.so -- ./crackme \n<<<\n \n\"B???????\"\n\nJonathan Salwan loves you <\n3\n\n----------------------------\n\nPassword: Bad password\nCount: \n185714\n\nNDH2k13-crackme-500 \n[\nmaster\u25cf\n]\n ~/pin-3.6-gcc-linux/pin -t ./myInscount0.so -- ./crackme \n<<<\n \n\"C???????\"\n\nJonathan Salwan loves you <\n3\n\n----------------------------\n\nPassword: Bad password\nCount: \n185714\n\n\n\n\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u8f93\u5165\u4ee5 ASCII\u7801 \u987a\u5e8f\u9012\u589e\u65f6\uff0c\u7b2c\u4e00\u4f4d\u4e3a A \u65f6\u6307\u4ee4\u6761\u6570\u53d1\u751f\u4e86\u53d8\u5316\uff0c\u6b64\u65f6\u6211\u4eec\u5728\u8fdb\u4e00\u6b65\u63a8\u6d4b\u6b63\u786e\u7684 flag \u7b2c\u4e00\u4f4d\u5373\u4e3a A\n\n\n\u518d\u5199\u4e00\u4e2a\u811a\u672c\u9010\u4f4d\u7206\u7834\n\n\nNDH2k13\n-\ncrackme\n-\n500\n \n[\nmaster\n\u25cf\n]\n \ncat\n \nguessPWD\n.\npy\n \n\n#!/usr/bin/env python\n\n\n# -*- coding: utf-8 -*-\n\n\n\nfrom\n \nsubprocess\n \nimport\n \nPopen\n,\n \nPIPE\n\n\nfrom\n \nsys\n \nimport\n \nargv\n\n\nimport\n \nstring\n\n\nimport\n \npdb\n\n\n\npinPath\n \n=\n \n\"/home/m4x/pin-3.6-gcc-linux/pin\"\n\n\npinInit\n \n=\n \nlambda\n \ntool\n,\n \nelf\n:\n \nPopen\n([\npinPath\n,\n \n'-t'\n,\n \ntool\n,\n \n'--'\n,\n \nelf\n],\n \nstdin\n \n=\n \nPIPE\n,\n \nstdout\n \n=\n \nPIPE\n)\n\n\npinWrite\n \n=\n \nlambda\n \ncont\n:\n \npin\n.\nstdin\n.\nwrite\n(\ncont\n)\n\n\npinRead\n \n=\n \nlambda\n \n:\n \npin\n.\ncommunicate\n()[\n0\n]\n\n\n\nif\n \n__name__\n \n==\n \n\"__main__\"\n:\n\n    \nlast\n \n=\n \n0\n\n    \n#  dic = map(chr, xrange(0x20, 0x80))\n\n    \ndic\n \n=\n \nstring\n.\nascii_letters\n \n+\n \nstring\n.\ndigits\n \n+\n \n\"+_ \"\n\n    \npwd\n \n=\n \n'?'\n \n*\n \n8\n\n    \ndicIdx\n \n=\n \n0\n\n    \npwdIdx\n \n=\n \n0\n\n\n    \nwhile\n \nTrue\n:\n\n        \npwd\n \n=\n \npwd\n[:\n \npwdIdx\n]\n \n+\n \ndic\n[\ndicIdx\n]\n \n+\n \npwd\n[\npwdIdx\n \n+\n \n1\n:\n \n]\n\n        \n#  pdb.set_trace()\n\n        \npin\n \n=\n \npinInit\n(\n\"./myInscount1.so\"\n,\n \n\"./crackme\"\n)\n\n        \npinWrite\n(\npwd\n \n+\n \n'\n\\n\n'\n)\n\n        \nnow\n \n=\n \nint\n(\npinRead\n()\n.\nsplit\n(\n\"Count: \"\n)[\n1\n])\n\n\n        \nprint\n \n\"input({}) -> now({}) -> delta({})\"\n.\nformat\n(\npwd\n,\n \nnow\n,\n \nnow\n \n-\n \nlast\n)\n\n\n        \nif\n \nnow\n \n-\n \nlast\n \n>\n \n2000\n \nand\n \ndicIdx\n:\n\n            \npwdIdx\n \n+=\n \n1\n\n            \ndicIdx\n \n=\n \n-\n1\n\n            \nlast\n \n=\n \n0\n\n            \nif\n \npwdIdx\n \n>=\n \nlen\n(\npwd\n):\n\n                \nprint\n \n\"Found pwd: {}\"\n.\nformat\n(\npwd\n)\n\n                \nbreak\n\n\n        \ndicIdx\n \n+=\n \n1\n\n        \nlast\n \n=\n \nnow\n\n\n\n\n\n\u8fd0\u884c\u7ed3\u679c\u5982\u4e0b\n\n\nNDH2k13-crackme-500 \n[\nmaster\u25cf\n]\n \ntime\n python guessPWD.py \ninput\n(\na???????\n)\n -> now\n(\n182804\n)\n -> delta\n(\n182804\n)\n\ninput\n(\nb???????\n)\n -> now\n(\n182804\n)\n -> delta\n(\n0\n)\n\ninput\n(\nc???????\n)\n -> now\n(\n182804\n)\n -> delta\n(\n0\n)\n\ninput\n(\nd???????\n)\n -> now\n(\n182804\n)\n -> delta\n(\n0\n)\n\ninput\n(\ne???????\n)\n -> now\n(\n182804\n)\n -> delta\n(\n0\n)\n\ninput\n(\nf???????\n)\n -> now\n(\n182804\n)\n -> delta\n(\n0\n)\n\ninput\n(\ng???????\n)\n -> now\n(\n182804\n)\n -> delta\n(\n0\n)\n\ninput\n(\nh???????\n)\n -> now\n(\n182804\n)\n -> delta\n(\n0\n)\n\ninput\n(\ni???????\n)\n -> now\n(\n182804\n)\n -> delta\n(\n0\n)\n\ninput\n(\nj???????\n)\n -> now\n(\n182804\n)\n -> delta\n(\n0\n)\n\ninput\n(\nk???????\n)\n -> now\n(\n182804\n)\n -> delta\n(\n0\n)\n\ninput\n(\nl???????\n)\n -> now\n(\n182804\n)\n -> delta\n(\n0\n)\n\ninput\n(\nm???????\n)\n -> now\n(\n182804\n)\n -> delta\n(\n0\n)\n\ninput\n(\nn???????\n)\n -> now\n(\n182804\n)\n -> delta\n(\n0\n)\n\ninput\n(\no???????\n)\n -> now\n(\n182804\n)\n -> delta\n(\n0\n)\n\ninput\n(\np???????\n)\n -> now\n(\n182804\n)\n -> delta\n(\n0\n)\n\ninput\n(\nq???????\n)\n -> now\n(\n182804\n)\n -> delta\n(\n0\n)\n\n......\ninput\n(\nAzI0wBsO\n)\n -> now\n(\n211070\n)\n -> delta\n(\n0\n)\n\ninput\n(\nAzI0wBsP\n)\n -> now\n(\n211069\n)\n -> delta\n(\n-1\n)\n\ninput\n(\nAzI0wBsQ\n)\n -> now\n(\n211069\n)\n -> delta\n(\n0\n)\n\ninput\n(\nAzI0wBsR\n)\n -> now\n(\n211069\n)\n -> delta\n(\n0\n)\n\ninput\n(\nAzI0wBsS\n)\n -> now\n(\n211069\n)\n -> delta\n(\n0\n)\n\ninput\n(\nAzI0wBsT\n)\n -> now\n(\n211069\n)\n -> delta\n(\n0\n)\n\ninput\n(\nAzI0wBsU\n)\n -> now\n(\n211069\n)\n -> delta\n(\n0\n)\n\ninput\n(\nAzI0wBsV\n)\n -> now\n(\n211069\n)\n -> delta\n(\n0\n)\n\ninput\n(\nAzI0wBsW\n)\n -> now\n(\n211069\n)\n -> delta\n(\n0\n)\n\ninput\n(\nAzI0wBsX\n)\n -> now\n(\n214976\n)\n -> delta\n(\n3907\n)\n\nFound pwd: AzI0wBsX\npython guessPWD.py  \n31\n.04s user \n14\n.72s system \n105\n% cpu \n43\n.341 total\n\n\n\n\n\u9a8c\u8bc1\u4e00\u4e0b\n\n\nNDH2k13-crackme-500 \n[\nmaster\u25cf\n]\n ./crackme \nJonathan Salwan loves you <\n3\n\n----------------------------\n\nPassword: AzI0wBsX\nGood password\n\n\n\n\n\u8fd9\u6837\uff0c\u6211\u4eec\u7528\u4e0d\u5230 5 \u5206\u949f\u7684\u65f6\u95f4\u5c31\u731c\u51fa\u4e86 flag\n\n\n\n\ninscount1(BB\u7ea7\u63d2\u6869) \u4e0e inscount0(ins\u7ea7\u63d2\u6869) \u6548\u679c\u76f8\u540c\uff0c\u4f46 inscount1 \u901f\u5ea6\u66f4\u5feb\uff0c\u5b9e\u9645\u89e3\u9898\u65f6\u53ef\u4ee5\u7528 inscount1 \u4ee3\u66ff inscount0\n\n\n\n\nhxpCTF-2017-main_strip\n\u00b6\n\n\n\u518d\u4ee5 hxpCTF2017 \u7684\u4e00\u9053\u9898\u76ee\u6f14\u793a\u6539\u9020 pintool \u7528\u4e8e\u89e3\u9898\uff0c\u6211\u4eec\u7740\u91cd\u6f14\u793a\u6539\u9020 pintool \u7684\u6b65\u9aa4\uff0c\u56e0\u6b64\u6062\u590d\u7b26\u53f7\u8868\u548c\u5206\u6790\u7a0b\u5e8f\u6d41\u7a0b\u7684\u90e8\u5206\u53ef\u4ee5\u53c2\u8003\u8fd9\u7bc7 \nwriteup\n\n\n\u6211\u4eec\u5148\u5c1d\u8bd5\u7528\u4e0a\u4f8b\u7684\u65b9\u6cd5\u89e3\u8fd9\u9053\u9898\u76ee\n\n\nhxpCTF-2017-main_strip \n[\nmaster\u25cf\u25cf\n]\n ~/pin-3.6-gcc-linux/pin -t ./myInscount1.so -- ./main_strip a\nNope.\nCount: \n517715\n\nhxpCTF-2017-main_strip \n[\nmaster\u25cf\u25cf\n]\n ~/pin-3.6-gcc-linux/pin -t ./myInscount1.so -- ./main_strip a \nNope.\nCount: \n545828\n\nhxpCTF-2017-main_strip \n[\nmaster\u25cf\u25cf\n]\n ~/pin-3.6-gcc-linux/pin -t ./myInscount1.so -- ./main_strip a\nNope.\nCount: \n532656\n\nhxpCTF-2017-main_strip \n[\nmaster\u25cf\u25cf\n]\n ~/pin-3.6-gcc-linux/pin -t ./myInscount1.so -- ./main_strip a\nNope.\nCount: \n524544\n\nhxpCTF-2017-main_strip \n[\nmaster\u25cf\u25cf\n]\n ~/pin-3.6-gcc-linux/pin -t ./myInscount1.so -- ./main_strip a\nNope.\nCount: \n582401\n\n\n\n\n\n\u5f88\u4e0d\u5e78\uff0c\u5373\u4f7f\u6211\u4eec\u4f7f\u7528\u540c\u4e00\u4e2a\u8f93\u5165\uff0c\u6307\u4ee4\u6570\u4e5f\u662f\u6709\u8f83\u5927\u53d8\u5316\u7684\uff0c\u4f7f\u7528\u73b0\u6709\u7684 pintool \u96be\u4ee5\u89e3\u51fa\u8fd9\u9053\u9898\u76ee\uff0c\u6211\u4eec\u8fdb\u884c\u66f4\u6df1\u4e00\u6b65\u7684\u5206\u6790\uff0c\u9a8c\u8bc1 flag \u7684\u5173\u952e\u90e8\u5206\u53ef\u4ee5\u8868\u793a\u4e3a\u5982\u4e0b\u4ee3\u7801\n\n\nfor\n \n(\nint\n \ni\n=\n0\n;\n \ni\n<\nlength\n(\nprovided_flag\n);\n \ni\n++\n)\n\n\n{\n\n    \nif\n \n(\nmain_mapanic\n(\nprovided_flag\n[\ni\n])\n \n!=\n \nconstant_binary_blob\n[\ni\n])\n\n    \n{\n\n        \nbad_boy\n();\n\n        \nexit\n();\n\n    \n}\n\n    \ngoodboy\n();\n\n\n}\n\n\n\n\n\n\u53ef\u4ee5\u770b\u51fa\u5224\u65ad\u76f8\u7b49\u662f\u9010\u4f4d\u8fdb\u884c\u7684\uff0c\u56e0\u6b64\u53ef\u4ee5\u8003\u8651\u5bf9 inscount0 \u7684 docount \u51fd\u6570\u505a\u5982\u4e0b\u66f4\u6539\n\n\n\u66f4\u6539\u524d\uff1a\n\n\nVOID\n \ndocount\n()\n \n{\n \nicount\n++\n;\n \n}\n\n\n\u66f4\u6539\u540e\uff1a\n\n\nVOID\n \ndocount\n(\nvoid\n \n*\nip\n)\n \n\n{\n\n    \n// .text:000000000047B96E  cmp al, cl; cmp mapanic(provided_flag[i]), constant_binary_blob[i]\n\n    \nif\n \n((\nlong\n \nlong\n \nint\n)\nip\n \n==\n \n0x000000000047B96E\n)\n\n     \nicount\n++\n;\n \n\n}\n\n\n\n\n\n\u53ea\u6709\u8fd0\u884c\u5230 0x47B96E \u4e00\u53e5\u624d\u4f1a\u8ba1\u6570\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u6839\u636e pintool \u7684\u7ed3\u679c\u6765\u9010\u4f4d\u7206\u7834 flag \u4e86\n\n\n\n\n\u7136\u800c\uff0c\u56e0\u4e3a\u8be5\u9898\u76ee\u7684\u6307\u4ee4\u8f83\u591a\uff0c\u6307\u4ee4\u7ea7\u522b\u7684\u63d2\u6869\u4f1a\u8017\u8d39\u8f83\u957f\u65f6\u95f4\uff0c\u9700\u89811h\u5de6\u53f3\u624d\u80fd\u5f97\u5230 flag\n\n\n\n\n\u9898\u76ee\n\u00b6\n\n\n\n\nxman2018\u9009\u62d4\u8d5b-ollvm\n\n\n\n\n\u603b\u7ed3\n\u00b6\n\n\n\n\n\u4f7f\u7528 intel pin \u53ef\u4ee5\u89e3\u4e00\u90e8\u5206 CTF challenges\uff0c\u5c24\u5176\u662f\u865a\u62df\u673a\u6216\u8005\u6df7\u6dc6\u4e25\u91cd\u7684\u9006\u5411\u9898\u76ee\uff0c\u4f46 pin \u7684\u7528\u9014\u7edd\u4e0d\u5c40\u9650\u4e8e\u6c42\u89e3 CTF challenges\n\n\n\u4f7f\u7528 pin \u53ef\u4ee5\u89e3\u4e00\u90e8\u5206 CTF \u9898\u76ee\uff0c\u4f46\u4e5f\u4ec5\u4ec5\u662f\u4e00\u90e8\u5206\u9898\u76ee\uff0c\u591a\u6570\u9898\u76ee\u7531\u4e8e\u63d2\u6869\u4ee3\u4ef7\u5927\uff0c\u96be\u4ee5\u63d0\u53d6\u4fa7\u4fe1\u9053\u4fe1\u606f\uff0cpintool \u96be\u4ee5\u7f16\u5199\u7b49\u539f\u56e0\u4f7f\u7528 pin \u6c42\u89e3\u5f97\u4e0d\u507f\u5931\uff0c\u56e0\u6b64\u4f7f\u7528 pin \u6c42\u89e3 CTF challenges \u53ef\u4ee5\u603b\u7ed3\u4e3a\u4e0b\u6761\u539f\u5219\uff1a\n\n\n\u80fd\u7528\u8840\u8d5a\uff0c\u51c9\u4e86\u4e0d\u4e8f\n\n\n\n\n\n\n\n\nReference\n\u00b6\n\n\n\n\nhttp://shell-storm.org/blog/A-binary-analysis-count-me-if-you-can/\n\n\nhttp://brieflyx.me/2017/binary-analysis/intel-pin-intro/\n\n\nhttp://eternal.red/2017/dont_panic-writeup/\n\n\nhttps://github.com/0x01f/pin-in-CTF",
            "title": "Intel pin"
        },
        {
            "location": "/binary_core_tools/instrumentation/intel_pin/#intel-pin",
            "text": "",
            "title": "intel pin"
        },
        {
            "location": "/binary_core_tools/instrumentation/intel_pin/#pin",
            "text": "pin \u662f intel \u5f00\u53d1\u7684\u4e00\u6b3e\u4e8c\u8fdb\u5236\u7a0b\u5e8f\u7684\u63d2\u6869\u5206\u6790\u5de5\u5177\uff0c\u652f\u6301 x86/x64 & windows/linux/mac\uff0c\u63d0\u4f9b\u4e86\u4e30\u5bcc\u7684 API \u4f9b\u4f7f\u7528\u8005\u7528 C/C++ \u7f16\u5199 pintool \u5206\u6790\u7a0b\u5e8f",
            "title": "\u4ec0\u4e48\u662f pin"
        },
        {
            "location": "/binary_core_tools/instrumentation/intel_pin/#instrument",
            "text": "\u901a\u4fd7\u7684\u6765\u8bf4\uff0c\u63d2\u6869\u5c31\u662f\u5728\u5df2\u6709\u7684\u6e90\u4ee3\u7801/\u4e8c\u8fdb\u5236\u7a0b\u5e8f\u4e2d\u63d2\u5165\u67d0\u4e9b\u4ee3\u7801\u4ee5\u4fbf\u4e8e\u81ea\u5df1\u5206\u6790\uff0c\u6bd4\u5982\u5728\u8c03\u8bd5\u65f6\u4f7f\u7528 printf \u6253\u5370\u53d8\u91cf\u503c\u5c31\u5c5e\u4e8e\u5728\u6e90\u4ee3\u7801\u7ea7\u522b\u7684\u63d2\u6869\u3002\u800cintel pin\u5c31\u662f\u5728\u4e8c\u8fdb\u5236\u7a0b\u5e8f\u7ea7\u522b\uff08\u6ca1\u6709\u6e90\u4ee3\u7801\uff09\u63d2\u6869\u7684\u4e00\u6b3e\u5de5\u5177",
            "title": "\u4ec0\u4e48\u662f\u63d2\u6869(instrument)"
        },
        {
            "location": "/binary_core_tools/instrumentation/intel_pin/#pin-pintool",
            "text": "",
            "title": "pin \u548c pintool"
        },
        {
            "location": "/binary_core_tools/instrumentation/intel_pin/#pin-pintool_1",
            "text": "pin \u7684\u5b89\u88c5\u5f88\u7b80\u5355\uff0c\u8fd9\u91cc\u4ee5 64 \u4f4d\u7684 Linux \u4e3a\u4f8b\u6765\u8bf4\u660e\uff0c\u4ece  \u5b98\u7f51  \u4e0a\u4e0b\u8f7d pin \u7ec4\u4ef6\u540e\uff0c\u89e3\u538b\u5373\u53ef\uff0c\u5728\u89e3\u538b\u540e\u7684\u6587\u4ef6\u5939\u5185\u6709\u7f16\u8bd1\u597d\u7684\u4e8c\u8fdb\u5236\u7a0b\u5e8f pin  pin-3.6-gcc-linux ls\ndoc  extlicense  extras  ia32  intel64  LICENSE  pin  README  redist.txt   source \npin-3.6-gcc-linux file pin \npin: ELF  32 -bit LSB executable, Intel  80386 , version  1   ( SYSV ) , statically linked, BuildID [ sha1 ]= 7beaa83f9142955a6e933bf29d4a8aa1269298bc, stripped\npin-3.6-gcc-linux ./pin \nE: Missing application name\nPin: pin-3.6-97554-31f0a167d\nCopyright  ( c )   2003 -2017, Intel Corporation. All rights reserved.\n\nUsage: pin  [ OPTION ]   [ -t <tool>  [ <toolargs> ]]  -- < command  line>\nUse -help  for  a description of options  \u5728  source/tools/ManualExamples  \u4e2d\u6709\u4e00\u4e9b\u73b0\u6210\u7684 pintool \u53ef\u4ee5\u4f7f\u7528\uff0c\u57fa\u672c\u6db5\u76d6\u4e86\u5404\u4e2a\u6a21\u5757\u7684\u7528\u6cd5\uff0c\u8fd9\u91cc\u4ee5 inscount0 \u8fd9\u4e2a pintool \u4e3a\u4f8b\u4ecb\u7ecd pin \u7684\u4f7f\u7528\u65b9\u6cd5  pin-3.6-gcc-linux  cd  source/tools/ManualExamples\nManualExamples file inscount0.cpp\ninscount0.cpp: C source, ASCII text\nManualExamples make obj-intel64/inscount0.so  TARGET = intel64\ng++ -Wall -Werror -Wno-unknown-pragmas -D__PIN__ = 1  -DPIN_CRT = 1  -fno-stack-protector -fno-exceptions -funwind-tables -fasynchronous-unwind-tables -fno-rtti -DTARGET_IA32E -DHOST_IA32E -fPIC -DTARGET_LINUX -fabi-version = 2   -I../../../source/include/pin -I../../../source/include/pin/gen -isystem /home/m4x/pin-3.6-gcc-linux/extras/stlport/include -isystem /home/m4x/pin-3.6-gcc-linux/extras/libstdc++/include -isystem /home/m4x/pin-3.6-gcc-linux/extras/crt/include -isystem /home/m4x/pin-3.6-gcc-linux/extras/crt/include/arch-x86_64 -isystem /home/m4x/pin-3.6-gcc-linux/extras/crt/include/kernel/uapi -isystem /home/m4x/pin-3.6-gcc-linux/extras/crt/include/kernel/uapi/asm-x86 -I../../../extras/components/include -I../../../extras/xed-intel64/include/xed -I../../../source/tools/InstLib -O3 -fomit-frame-pointer -fno-strict-aliasing   -c -o obj-intel64/inscount0.o inscount0.cpp\ng++ -shared -Wl,--hash-style = sysv ../../../intel64/runtime/pincrt/crtbeginS.o -Wl,-Bsymbolic -Wl,--version-script = ../../../source/include/pin/pintool.ver -fabi-version = 2     -o obj-intel64/inscount0.so obj-intel64/inscount0.o  -L../../../intel64/runtime/pincrt -L../../../intel64/lib -L../../../intel64/lib-ext -L../../../extras/xed-intel64/lib -lpin -lxed ../../../intel64/runtime/pincrt/crtendS.o -lpin3dwarf  -ldl-dynamic -nostdlib -lstlport-dynamic -lm-dynamic -lc-dynamic -lunwind-dynamic\nManualExamples file obj-intel64/inscount0.so \nobj-intel64/inscount0.so: ELF  64 -bit LSB shared object, x86-64, version  1   ( SYSV ) , dynamically linked, BuildID [ sha1 ]= 3baa29dd54235acaab02edc94bf9ac377dd7b0e5, not stripped  \u6b64\u65f6\u5728 obj-intel64 \u4e0b\u7f16\u8bd1\u751f\u6210\u4e86 inscount0.so\uff0c\u8fd9\u4e2a so \u5373\u4e3a\u4e00\u79cd pintool\uff0c\u529f\u80fd\u4e3a\u8bb0\u5f55\u7a0b\u5e8f\u6267\u884c\u7684\u6307\u4ee4\u7684\u6761\u6570\uff1b   \u5224\u65ad pintool \u7684\u529f\u80fd\u53ef\u4ee5\u9605\u8bfb pintool \u6e90\u4ee3\u7801\u6216\u8005\u4f7f\u7528\u4e0b\u6761\u6307\u4ee4  $ pin -t your_pintool -h -- your_application   \u7c7b\u4f3c\u7684\uff0c\u8981\u7f16\u8bd1 32 \u4f4d\u7684 pintool \u53ef\u4ee5\u4f7f\u7528  make obj-ia32/inscount0.so  \u7f16\u8bd1 ManualExamples \u4e2d\u7684\u6240\u6709 pintool \u53ef\u4ee5\u4f7f\u7528  make all  TAEGET = intel64\nmake all  TAEGET = ia32",
            "title": "pin \u7684\u5b89\u88c5\uff0cpintool \u7684\u7f16\u8bd1"
        },
        {
            "location": "/binary_core_tools/instrumentation/intel_pin/#pin_1",
            "text": "pin \u7684\u57fa\u672c\u547d\u4ee4\u683c\u5f0f\u5982\u4e0b  pin -t your_pintool -- your_binary <arg>   \u4ee5\u521a\u521a\u7f16\u8bd1\u7684 inscount0 \u8fd9\u4e2a pintool \u4e3a\u4f8b  ManualExamples ../../../pin -t ./obj-intel64/inscount0.so -- /bin/ls -a\n.              inscount2.cpp      obj-intel64\n..             inscount.out   pinatrace.cpp\nbuffer_linux.cpp       inscount_tls.cpp   pin.log\nbuffer_windows.cpp     invocation.cpp     proccount.cpp\ncountreps.cpp          isampling.cpp      replacesigprobed.cpp\ndetach.cpp         itrace.cpp     safecopy.cpp\ndivide_by_zero_unix.c  little_malloc.c    stack-debugger.cpp\ndivide_by_zero_win.c   logtrace.cpp   stack-debugger-tutorial.sln\nemudiv.cpp         makefile       stack-debugger-tutorial.vcxproj\nfibonacci.cpp          makefile.rules     stack-debugger-tutorial.vcxproj.filters\nfollow_child_app1.cpp  malloc.cpp     statica.cpp\nfollow_child_app2.cpp  malloc_mt.cpp      staticcount.cpp\nfollow_child_tool.cpp  malloctrace.cpp    strace.cpp\nfork_app.cpp           myInscount0.cpp     test \nfork_jit_tool.cpp      myInscount1.cpp    test.c\nimageload.cpp          myMalloctrace.cpp  test-packed\ninscount0.cpp          nonstatica.cpp     tracer.cpp\ninscount1.cpp          obj-ia32       w_malloctrace.cpp\nManualExamples cat inscount.out \nCount  813449   inscount \u9ed8\u8ba4\u7ed3\u679c\u4fdd\u5b58\u5728 inscount.out \u8fd9\u4e2a\u6587\u4ef6\u4e2d\uff0c\u5728\u4e0a\u4f8b\u4e2d\uff0c\u5373\u6b64\u65f6  ls -a  \u8fd9\u6761\u547d\u4ee4\u5171\u6267\u884c\u4e86 813449 \u6761\u6307\u4ee4",
            "title": "pin \u7684\u4f7f\u7528"
        },
        {
            "location": "/binary_core_tools/instrumentation/intel_pin/#pintool",
            "text": "\u540c\u6837\u4ee5 inscount0 \u4e3a\u4f8b\u5206\u6790\uff0c\u67e5\u770b inscount0.cpp \u7684\u5185\u5bb9  #include   <iostream>  #include   <fstream>  #include   \"pin.H\"  ofstream   OutFile ;  // The running count of instructions is kept here  // make it static to help the compiler optimize docount  static   UINT64   icount   =   0 ;  // This function is called before every instruction is executed  VOID   docount ()   {   icount ++ ;   }  // Pin calls this function every time a new instruction is encountered  VOID   Instruction ( INS   ins ,   VOID   * v )  { \n     // Insert a call to docount before every instruction, no arguments are passed \n     INS_InsertCall ( ins ,   IPOINT_BEFORE ,   ( AFUNPTR ) docount ,   IARG_END );  }  KNOB < string >   KnobOutputFile ( KNOB_MODE_WRITEONCE ,   \"pintool\" , \n     \"o\" ,   \"inscount.out\" ,   \"specify output file name\" );  // This function is called when the application exits  VOID   Fini ( INT32   code ,   VOID   * v )  { \n     // Write to a file since cout and cerr maybe closed by the application \n     OutFile . setf ( ios :: showbase ); \n     OutFile   <<   \"Count \"   <<   icount   <<   endl ; \n     OutFile . close ();  }  /* ===================================================================== */  /* Print Help Message                                                    */  /* ===================================================================== */  INT32   Usage ()  { \n     cerr   <<   \"This tool counts the number of dynamic instructions executed\"   <<   endl ; \n     cerr   <<   endl   <<   KNOB_BASE :: StringKnobSummary ()   <<   endl ; \n     return   - 1 ;  }  /* ===================================================================== */  /* Main                                                                  */  /* ===================================================================== */  /*   argc, argv are the entire command line: pin -t <toolname> -- ...    */  /* ===================================================================== */  int   main ( int   argc ,   char   *   argv [])  { \n     // Initialize pin \n     if   ( PIN_Init ( argc ,   argv ))   return   Usage (); \n\n     OutFile . open ( KnobOutputFile . Value (). c_str ()); \n\n     // Register Instruction to be called to instrument instructions \n     INS_AddInstrumentFunction ( Instruction ,   0 ); \n\n     // Register Fini to be called when the application exits \n     PIN_AddFiniFunction ( Fini ,   0 ); \n\n     // Start the program, never returns \n     PIN_StartProgram (); \n\n     return   0 ;  }   \u4ece main \u5f00\u59cb\uff0c\u9996\u5148\u8c03\u7528\u4e86 PIN_init\uff0853 \u884c\uff09\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u7136\u540e\u4f7f\u7528 INS_AddInstrumenFunction \u6ce8\u518c\u4e86\u4e00\u4e2a\u63d2\u6869\u51fd\u6570(58\u884c)\uff0c\u6839\u636e intel pin \u7684  \u7528\u6237\u624b\u518c  PIN_CALLBACK   LEVEL_PINCLIENT :: INS_AddInstrumentFunction   (     INS_INSTRUMENT_CALLBACK       fun ,  VOID   *    val   )         Add   a   function   used   to   instrument   at   instruction   granularity  Parameters :  fun   Instrumentation   function   for   instructions  val   passed   as   the   second   argument   to   the   instrumentation   function  Returns :  PIN_CALLBACK   A   handle   to   a   callback   that   can   be   used   to   further   modify   this   callback ' s   properties  Note :  The   pin   client   lock   is   obtained   during   the   call   of   this   API .  Availability :  Mode :   JIT  O / S :   Linux ,   Windows   &   OS   X *  CPU :   All   \u5728\u8fd9\u91cc\u8be5\u51fd\u6570\u7684\u4f5c\u7528\u662f\u5728\u6307\u4ee4\u7c92\u5ea6\u63d2\u5165 Instruction \u51fd\u6570\uff0c\u5373\u5728\u6bcf\u6761\u6307\u4ee4\u6267\u884c\u524d\uff0c\u90fd\u4f1a\u8fdb\u5165 Instruction \u8fd9\u4e2a\u51fd\u6570\u4e2d\uff0c\u5176\u7b2c2\u4e2a\u53c2\u6570\u4e3a\u4e00\u4e2a\u989d\u5916\u4f20\u9012\u7ed9 Instruction \u7684\u53c2\u6570\uff0c\u5373\u5bf9\u5e94  VOID *v  \u8fd9\u4e2a\u53c2\u6570\uff0c\u8fd9\u91cc\u6ca1\u6709\u4f7f\u7528\u3002\u800c Instruction \u63a5\u53d7\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u4e3a  INS  \u7ed3\u6784\uff0c\u7528\u6765\u8868\u793a\u4e00\u6761\u6307\u4ee4  \u800c\u6211\u4eec\u518d\u770b Instruction \u8fd9\u4e2a\u51fd\u6570  VOID   Instruction ( INS   ins ,   VOID   * v )  { \n     // Insert a call to docount before every instruction, no arguments are passed \n     INS_InsertCall ( ins ,   IPOINT_BEFORE ,   ( AFUNPTR ) docount ,   IARG_END );  }   \u5728 Instruction \u51fd\u6570\u5185\u90e8\u53c8\u4f7f\u7528 INS_InsertCall \u6ce8\u518c\u4e86\u4e00\u4e2a\u51fd\u6570 docount\uff0c\u5373\u5728\u6bcf\u6761\u6307\u4ee4\u524d\u5b9e\u9645\u63d2\u5165\u4e86 docount \u8fd9\u4e2a\u51fd\u6570\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f INS_InsertCall \u8bd5\u4e00\u4e2a\u4fbf\u9910\u51fd\u6570\uff0c\u524d\u4e09\u4e2a\u53c2\u6570\u5206\u522b\u4e3a\u6307\u4ee4(ins)\uff0c\u63d2\u5165\u7684\u5b9e\u9645(IPOINT_BEFORE\uff0c\u8868\u793a\u5728\u6307\u4ee4\u8fd0\u884c\u4e4b\u524d\u63d2\u5165 docount \u51fd\u6570)\uff0c\u51fd\u6570\u6307\u9488(docount\uff0c\u8f6c\u5316\u4e3a\u4e86 AFUNPTR \u7c7b\u578b)\uff0c\u4e4b\u540e\u7684\u53c2\u6570\u4e3a\u4f20\u9012\u7ed9 docount \u51fd\u6570\u7684\u53c2\u6570\uff0c\u4ee5 IARG_END \u7ed3\u5c3e  \u800c docount \u51fd\u6570\uff0812 \u884c\uff09\u7684\u4f5c\u7528\u5c31\u5f88\u660e\u663e\u4e86\uff0c\u6bcf\u6b21\u5c06\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf\u52a0 1\uff0c\u56e0\u6b64\u6b64\u65f6 /bin/ls -a \u8fd0\u884c\u7684\u6a21\u5f0f\u5982\u4e0b:  ...\nicount++;\nsub $0xff, %edx\nicount++;\ncmp %esi, %edx\nicount++;\njle <L1>\nicount++;\nmov $0x1, %edi\nicount++;\nadd $0x10, %eax\n...  \u6240\u4ee5 inscount0 \u7684\u7528\u9014\u5c31\u5f88\u660e\u663e\u4e86\uff0c\u6bcf\u6761\u6307\u4ee4\u524d\u90fd\u8c03\u7528 docount \u51fd\u6570\u5c06\u5168\u5c40\u53d8\u91cf icount \u81ea\u589e\uff0c\u6700\u540e\u901a\u8fc7PIN_AddFiniFunction \u51fd\u6570\u6ce8\u518c\u7684 Fini \u51fd\u6570(25\u884c)\u5c06\u7ed3\u679c\u5199\u5230\u4e00\u4e2a\u6587\u4ef6\u4e2d\u3002  \u5f53\u8fd9\u4e9b\u51fd\u6570\u90fd\u5b9a\u4e49\u5b8c\u540e\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528 PIN_StartProgram \u6765\u542f\u52a8\u7a0b\u5e8f\u4e86  \u8fd9\u91cc\u5206\u6790\u4e86\u4e00\u4e2a\u6700\u7b80\u5355\u7684 pintool \u4f8b\u5b50\uff0c\u66f4\u591a pintool \u4f8b\u5b50\u7684\u5206\u6790\u548c\u5176\u4ed6\u51fd\u6570\u7684\u4f7f\u7528\u53ef\u4ee5\u53c2\u8003 BrieflyX \u7684  \u535a\u5ba2",
            "title": "pintool \u7684\u5206\u6790"
        },
        {
            "location": "/binary_core_tools/instrumentation/intel_pin/#pin-in-ctf",
            "text": "\u56e0\u4e3a\u52a8\u6001\u63d2\u6869\u6709\u4e0d\u91cd\u65b0\u7f16\u8bd1\u5373\u53ef\u6536\u96c6\u4e8c\u8fdb\u5236\u7a0b\u5e8f\u67d0\u4e9b\u4fe1\u606f\u7684\u7279\u6027\uff0c\u56e0\u6b64\u7528 pin \u6c42\u89e3**\u4e00\u90e8\u5206** CTF challenges \u4f1a\u5f02\u5e38\u7684\u65b9\u4fbf\uff0c\u4e0b\u8fb9\u7ed9\u51fa\u4e00\u4e9b\u4f8b\u5b50\u548c\u5206\u6790",
            "title": "pin in CTF"
        },
        {
            "location": "/binary_core_tools/instrumentation/intel_pin/#ndh2k13-crackme-500",
            "text": "\u9996\u5148\u7528\u5e38\u89c4\u65b9\u6cd5\u5bf9 crackme \u6587\u4ef6\u8fdb\u884c\u5206\u6790  NDH2k13-crackme-500  [ master ]  file crackme \ncrackme: ELF  64 -bit LSB executable, x86-64, invalid version  ( SYSV ) ,  for  GNU/Linux  2 .6.9, statically linked, corrupted section header size\nNDH2k13-crackme-500  [ master ]  nm ./crackme \n\nnm: out of memory allocating  109524665216  bytes after a total of  0  bytes\nNDH2k13-crackme-500  [ master ]  objdump -d ./crackme -M intel\nobjdump: ./crackme: \u4e0d\u53ef\u8bc6\u522b\u7684\u6587\u4ef6\u683c\u5f0f\nNDH2k13-crackme-500  [ master ]  ./crackme \nJonathan Salwan loves you < 3 \n----------------------------\n\nPassword:  test \nBad password  \u53d1\u73b0 section header \u53d7\u5230\u4e86\u635f\u574f\uff0c\u7528 IDA \u6253\u5f00\u65f6\u4e5f\u6709\u5f88\u591a\u62a5\u9519\uff0c\u8fd9\u65f6\u6211\u4eec\u5c1d\u8bd5\u4f7f\u7528 intel pin \u6765\u6c42\u89e3\u8fd9\u9053\u9898\u76ee\uff0c\u5148\u4f7f\u7528\u6700\u5e38\u89c1\u7684\u7edf\u8ba1\u6307\u4ee4\u6761\u6570\u7684\u65b9\u6cd5  NDH2k13-crackme-500  [ master ]  ~/pin-3.6-gcc-linux/pin -t ./inscount0.so -- ./crackme  <<<   \"a\"  >> /dev/null ;  cat inscount.out \nCount  160345 \nNDH2k13-crackme-500  [ master\u25cf ]  ~/pin-3.6-gcc-linux/pin -t ./myInscount0.so -- ./crackme  <<<   \"a\"  \nJonathan Salwan loves you < 3 \n----------------------------\n\nPassword: Bad password\nCount:  163218 \nNDH2k13-crackme-500  [ master\u25cf ]  ~/pin-3.6-gcc-linux/pin -t ./myInscount0.so -- ./crackme  <<<   \"aa\" \nJonathan Salwan loves you < 3 \n----------------------------\n\nPassword: Bad password\nCount:  166014 \nNDH2k13-crackme-500  [ master\u25cf ]  ~/pin-3.6-gcc-linux/pin -t ./myInscount0.so -- ./crackme  <<<   \"aaa\" \nJonathan Salwan loves you < 3 \n----------------------------\n\nPassword: Bad password\nCount:  168810 \nNDH2k13-crackme-500  [ master\u25cf ]  ~/pin-3.6-gcc-linux/pin -t ./myInscount0.so -- ./crackme  <<<   \"aaaa\" \nJonathan Salwan loves you < 3 \n----------------------------\n\nPassword: Bad password\nCount:  171606 \nNDH2k13-crackme-500  [ master\u25cf ]  ~/pin-3.6-gcc-linux/pin -t ./myInscount0.so -- ./crackme  <<<   \"aaaaa\" \nJonathan Salwan loves you < 3 \n----------------------------\n\nPassword: Bad password\nCount:  174402 \nNDH2k13-crackme-500  [ master\u25cf ]  bpython\nbpython version  0 .17.1 on top of Python  2 .7.13+ /usr/bin/python2\n>>>  174402  -  171606   ==   171606  -  168810   ==   168810  -  166014   ==   166014  -  163218 \nTrue\n>>>   \u6b64\u65f6\u6211\u4eec\u53d1\u73b0\u4e86\u4e00\u4e2a\u5f88\u6709\u8da3\u7684\u7279\u6027\uff0c\u8f93\u5165\u957f\u5ea6\u6bcf\u6b21\u589e\u52a0 1 \u65f6\uff0c\u6307\u4ee4\u6761\u6570\u4e5f\u662f\u4ee5\u7b49\u5dee\u7684\u89c4\u6a21\u9012\u589e\u7684   myInscount0 \u662f\u6211\u5728 inscount0 \u7684\u57fa\u7840\u4e0a\u66f4\u6539\u7684 pintool\uff0c\u5b9e\u73b0\u4e86\u4ece\u7ed3\u679c\u4fdd\u5b58\u5230\u6587\u4ef6\u5230\u7ed3\u679c\u8f93\u51fa\u5230\u6807\u51c6\u8f93\u51fa\u7684\u4fee\u6539   \u6211\u4eec\u5199\u4e00\u4e2a\u7b80\u5355\u7684\u811a\u672c\u67e5\u770b\u8f93\u5165\u957f\u5ea6\u9012\u589e\u65f6\uff0c\u6307\u4ee4\u6761\u6570\u7684\u53d8\u5316\u89c4\u5f8b  NDH2k13 - crackme - 500   [ master \u25cf ]   cat   guessLen . py   #!/usr/bin/env python  # -*- coding: utf-8 -*-  from   subprocess   import   Popen ,   PIPE  from   sys   import   argv  import   string  pinPath   =   \"/home/m4x/pin-3.6-gcc-linux/pin\"  pinInit   =   lambda   tool ,   elf :   Popen ([ pinPath ,   '-t' ,   tool ,   '--' ,   elf ],   stdin   =   PIPE ,   stdout   =   PIPE )  pinWrite   =   lambda   cont :   pin . stdin . write ( cont )  pinRead   =   lambda   :   pin . communicate ()[ 0 ]  if   __name__   ==   \"__main__\" : \n     last   =   0 \n     for   i   in   xrange ( 1 ,   30 ): \n         pin   =   pinInit ( \"./myInscount0.so\" ,   \"./crackme\" ) \n         pinWrite ( \"a\"   *   i   +   ' \\n ' ) \n         now   =   int ( pinRead () . split ( \"Count: \" )[ 1 ]) \n\n         print   \"inputLen({:2d}) -> ins({}) -> delta({})\" . format ( i ,   now ,   now   -   last ) \n         last   =   now   \u5728\u6211\u7535\u8111\u4e0a\u8fd0\u884c\u7ed3\u679c\u5982\u4e0b\uff1a  NDH2k13 - crackme - 500   [ master \u25cf ]   python   guessLen . py   inputLen (   1 )   ->   ins ( 160307 )   ->   delta ( 160307 )  inputLen (   2 )   ->   ins ( 163103 )   ->   delta ( 2796 )  inputLen (   3 )   ->   ins ( 165899 )   ->   delta ( 2796 )  inputLen (   4 )   ->   ins ( 168695 )   ->   delta ( 2796 )  inputLen (   5 )   ->   ins ( 171491 )   ->   delta ( 2796 )  inputLen (   6 )   ->   ins ( 174287 )   ->   delta ( 2796 )  inputLen (   7 )   ->   ins ( 177083 )   ->   delta ( 2796 )  inputLen (   8 )   ->   ins ( 182804 )   ->   delta ( 5721 )  inputLen (   9 )   ->   ins ( 182676 )   ->   delta ( - 128 )  inputLen ( 10 )   ->   ins ( 185472 )   ->   delta ( 2796 )  inputLen ( 11 )   ->   ins ( 188268 )   ->   delta ( 2796 )  inputLen ( 12 )   ->   ins ( 191064 )   ->   delta ( 2796 )  inputLen ( 13 )   ->   ins ( 193860 )   ->   delta ( 2796 )  inputLen ( 14 )   ->   ins ( 196656 )   ->   delta ( 2796 )  inputLen ( 15 )   ->   ins ( 199452 )   ->   delta ( 2796 )  inputLen ( 16 )   ->   ins ( 202248 )   ->   delta ( 2796 )  inputLen ( 17 )   ->   ins ( 205044 )   ->   delta ( 2796 )  inputLen ( 18 )   ->   ins ( 207840 )   ->   delta ( 2796 )  inputLen ( 19 )   ->   ins ( 210636 )   ->   delta ( 2796 )  inputLen ( 20 )   ->   ins ( 213432 )   ->   delta ( 2796 )  inputLen ( 21 )   ->   ins ( 216228 )   ->   delta ( 2796 )  inputLen ( 22 )   ->   ins ( 219024 )   ->   delta ( 2796 )  inputLen ( 23 )   ->   ins ( 221820 )   ->   delta ( 2796 )  inputLen ( 24 )   ->   ins ( 224616 )   ->   delta ( 2796 )  inputLen ( 25 )   ->   ins ( 227412 )   ->   delta ( 2796 )  inputLen ( 26 )   ->   ins ( 230208 )   ->   delta ( 2796 )  inputLen ( 27 )   ->   ins ( 244188 )   ->   delta ( 13980 )  inputLen ( 28 )   ->   ins ( 244188 )   ->   delta ( 0 )  inputLen ( 29 )   ->   ins ( 244188 )   ->   delta ( 0 )   \u53ef\u4ee5\u53d1\u73b0\uff0c\u5728\u8f93\u5165\u957f\u5ea6 <8 \u65f6\uff0c\u6307\u4ee4\u6761\u6570\u662f\u9012\u589e\u7684\uff0c\u4f46\u957f\u5ea6\u4e3a 8 \u4e0e\u957f\u5ea6\u4e3a 7 \u6bd4\u8f83\u53d1\u751f\u4e86\u7a81\u53d8\uff0c\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u5c31\u53ef\u4ee5\u5927\u80c6\u7684\u63a8\u6d4b\u5f53\u8f93\u5165\u957f\u5ea6\u4e3a 8 \u65f6\uff0c\u7a0b\u5e8f\u7684\u8fd0\u884c\u6d41\u7a0b\u6709\u4e86\u8f83\u5927\u7684\u53d8\u5316\uff0c\u6b63\u786e\u7684 flag \u957f\u5ea6\u5373\u4e3a 8  \u6211\u4eec\u4ee5\u8f93\u5165\u957f\u5ea6\u662f 8 \u4e3a\u524d\u63d0\uff0c\u518d\u67e5\u770b\u4e0d\u540c\u8f93\u5165\u4e0b\u6307\u4ee4\u6761\u6570\u7684\u53d8\u5316\u89c4\u5f8b  NDH2k13-crackme-500  [ master\u25cf ]  ~/pin-3.6-gcc-linux/pin -t ./myInscount0.so -- ./crackme  <<<   \">???????\" \nJonathan Salwan loves you < 3 \n----------------------------\n\nPassword: Bad password\nCount:  185714 \nNDH2k13-crackme-500  [ master\u25cf ]  ~/pin-3.6-gcc-linux/pin -t ./myInscount0.so -- ./crackme  <<<   \"????????\" \nJonathan Salwan loves you < 3 \n----------------------------\n\nPassword: Bad password\nCount:  185714 \nNDH2k13-crackme-500  [ master\u25cf ]  ~/pin-3.6-gcc-linux/pin -t ./myInscount0.so -- ./crackme  <<<   \"@???????\" \nJonathan Salwan loves you < 3 \n----------------------------\n\nPassword: Bad password\nCount:  185714 \nNDH2k13-crackme-500  [ master\u25cf ]  ~/pin-3.6-gcc-linux/pin -t ./myInscount0.so -- ./crackme  <<<   \"A???????\" \nJonathan Salwan loves you < 3 \n----------------------------\n\nPassword: Bad password\nCount:  189752 \nNDH2k13-crackme-500  [ master\u25cf ]  ~/pin-3.6-gcc-linux/pin -t ./myInscount0.so -- ./crackme  <<<   \"B???????\" \nJonathan Salwan loves you < 3 \n----------------------------\n\nPassword: Bad password\nCount:  185714 \nNDH2k13-crackme-500  [ master\u25cf ]  ~/pin-3.6-gcc-linux/pin -t ./myInscount0.so -- ./crackme  <<<   \"C???????\" \nJonathan Salwan loves you < 3 \n----------------------------\n\nPassword: Bad password\nCount:  185714   \u53ef\u4ee5\u53d1\u73b0\uff0c\u8f93\u5165\u4ee5 ASCII\u7801 \u987a\u5e8f\u9012\u589e\u65f6\uff0c\u7b2c\u4e00\u4f4d\u4e3a A \u65f6\u6307\u4ee4\u6761\u6570\u53d1\u751f\u4e86\u53d8\u5316\uff0c\u6b64\u65f6\u6211\u4eec\u5728\u8fdb\u4e00\u6b65\u63a8\u6d4b\u6b63\u786e\u7684 flag \u7b2c\u4e00\u4f4d\u5373\u4e3a A  \u518d\u5199\u4e00\u4e2a\u811a\u672c\u9010\u4f4d\u7206\u7834  NDH2k13 - crackme - 500   [ master \u25cf ]   cat   guessPWD . py   #!/usr/bin/env python  # -*- coding: utf-8 -*-  from   subprocess   import   Popen ,   PIPE  from   sys   import   argv  import   string  import   pdb  pinPath   =   \"/home/m4x/pin-3.6-gcc-linux/pin\"  pinInit   =   lambda   tool ,   elf :   Popen ([ pinPath ,   '-t' ,   tool ,   '--' ,   elf ],   stdin   =   PIPE ,   stdout   =   PIPE )  pinWrite   =   lambda   cont :   pin . stdin . write ( cont )  pinRead   =   lambda   :   pin . communicate ()[ 0 ]  if   __name__   ==   \"__main__\" : \n     last   =   0 \n     #  dic = map(chr, xrange(0x20, 0x80)) \n     dic   =   string . ascii_letters   +   string . digits   +   \"+_ \" \n     pwd   =   '?'   *   8 \n     dicIdx   =   0 \n     pwdIdx   =   0 \n\n     while   True : \n         pwd   =   pwd [:   pwdIdx ]   +   dic [ dicIdx ]   +   pwd [ pwdIdx   +   1 :   ] \n         #  pdb.set_trace() \n         pin   =   pinInit ( \"./myInscount1.so\" ,   \"./crackme\" ) \n         pinWrite ( pwd   +   ' \\n ' ) \n         now   =   int ( pinRead () . split ( \"Count: \" )[ 1 ]) \n\n         print   \"input({}) -> now({}) -> delta({})\" . format ( pwd ,   now ,   now   -   last ) \n\n         if   now   -   last   >   2000   and   dicIdx : \n             pwdIdx   +=   1 \n             dicIdx   =   - 1 \n             last   =   0 \n             if   pwdIdx   >=   len ( pwd ): \n                 print   \"Found pwd: {}\" . format ( pwd ) \n                 break \n\n         dicIdx   +=   1 \n         last   =   now   \u8fd0\u884c\u7ed3\u679c\u5982\u4e0b  NDH2k13-crackme-500  [ master\u25cf ]   time  python guessPWD.py \ninput ( a??????? )  -> now ( 182804 )  -> delta ( 182804 ) \ninput ( b??????? )  -> now ( 182804 )  -> delta ( 0 ) \ninput ( c??????? )  -> now ( 182804 )  -> delta ( 0 ) \ninput ( d??????? )  -> now ( 182804 )  -> delta ( 0 ) \ninput ( e??????? )  -> now ( 182804 )  -> delta ( 0 ) \ninput ( f??????? )  -> now ( 182804 )  -> delta ( 0 ) \ninput ( g??????? )  -> now ( 182804 )  -> delta ( 0 ) \ninput ( h??????? )  -> now ( 182804 )  -> delta ( 0 ) \ninput ( i??????? )  -> now ( 182804 )  -> delta ( 0 ) \ninput ( j??????? )  -> now ( 182804 )  -> delta ( 0 ) \ninput ( k??????? )  -> now ( 182804 )  -> delta ( 0 ) \ninput ( l??????? )  -> now ( 182804 )  -> delta ( 0 ) \ninput ( m??????? )  -> now ( 182804 )  -> delta ( 0 ) \ninput ( n??????? )  -> now ( 182804 )  -> delta ( 0 ) \ninput ( o??????? )  -> now ( 182804 )  -> delta ( 0 ) \ninput ( p??????? )  -> now ( 182804 )  -> delta ( 0 ) \ninput ( q??????? )  -> now ( 182804 )  -> delta ( 0 ) \n......\ninput ( AzI0wBsO )  -> now ( 211070 )  -> delta ( 0 ) \ninput ( AzI0wBsP )  -> now ( 211069 )  -> delta ( -1 ) \ninput ( AzI0wBsQ )  -> now ( 211069 )  -> delta ( 0 ) \ninput ( AzI0wBsR )  -> now ( 211069 )  -> delta ( 0 ) \ninput ( AzI0wBsS )  -> now ( 211069 )  -> delta ( 0 ) \ninput ( AzI0wBsT )  -> now ( 211069 )  -> delta ( 0 ) \ninput ( AzI0wBsU )  -> now ( 211069 )  -> delta ( 0 ) \ninput ( AzI0wBsV )  -> now ( 211069 )  -> delta ( 0 ) \ninput ( AzI0wBsW )  -> now ( 211069 )  -> delta ( 0 ) \ninput ( AzI0wBsX )  -> now ( 214976 )  -> delta ( 3907 ) \nFound pwd: AzI0wBsX\npython guessPWD.py   31 .04s user  14 .72s system  105 % cpu  43 .341 total  \u9a8c\u8bc1\u4e00\u4e0b  NDH2k13-crackme-500  [ master\u25cf ]  ./crackme \nJonathan Salwan loves you < 3 \n----------------------------\n\nPassword: AzI0wBsX\nGood password  \u8fd9\u6837\uff0c\u6211\u4eec\u7528\u4e0d\u5230 5 \u5206\u949f\u7684\u65f6\u95f4\u5c31\u731c\u51fa\u4e86 flag   inscount1(BB\u7ea7\u63d2\u6869) \u4e0e inscount0(ins\u7ea7\u63d2\u6869) \u6548\u679c\u76f8\u540c\uff0c\u4f46 inscount1 \u901f\u5ea6\u66f4\u5feb\uff0c\u5b9e\u9645\u89e3\u9898\u65f6\u53ef\u4ee5\u7528 inscount1 \u4ee3\u66ff inscount0",
            "title": "NDH2K13-crackme-500"
        },
        {
            "location": "/binary_core_tools/instrumentation/intel_pin/#hxpctf-2017-main_strip",
            "text": "\u518d\u4ee5 hxpCTF2017 \u7684\u4e00\u9053\u9898\u76ee\u6f14\u793a\u6539\u9020 pintool \u7528\u4e8e\u89e3\u9898\uff0c\u6211\u4eec\u7740\u91cd\u6f14\u793a\u6539\u9020 pintool \u7684\u6b65\u9aa4\uff0c\u56e0\u6b64\u6062\u590d\u7b26\u53f7\u8868\u548c\u5206\u6790\u7a0b\u5e8f\u6d41\u7a0b\u7684\u90e8\u5206\u53ef\u4ee5\u53c2\u8003\u8fd9\u7bc7  writeup  \u6211\u4eec\u5148\u5c1d\u8bd5\u7528\u4e0a\u4f8b\u7684\u65b9\u6cd5\u89e3\u8fd9\u9053\u9898\u76ee  hxpCTF-2017-main_strip  [ master\u25cf\u25cf ]  ~/pin-3.6-gcc-linux/pin -t ./myInscount1.so -- ./main_strip a\nNope.\nCount:  517715 \nhxpCTF-2017-main_strip  [ master\u25cf\u25cf ]  ~/pin-3.6-gcc-linux/pin -t ./myInscount1.so -- ./main_strip a \nNope.\nCount:  545828 \nhxpCTF-2017-main_strip  [ master\u25cf\u25cf ]  ~/pin-3.6-gcc-linux/pin -t ./myInscount1.so -- ./main_strip a\nNope.\nCount:  532656 \nhxpCTF-2017-main_strip  [ master\u25cf\u25cf ]  ~/pin-3.6-gcc-linux/pin -t ./myInscount1.so -- ./main_strip a\nNope.\nCount:  524544 \nhxpCTF-2017-main_strip  [ master\u25cf\u25cf ]  ~/pin-3.6-gcc-linux/pin -t ./myInscount1.so -- ./main_strip a\nNope.\nCount:  582401   \u5f88\u4e0d\u5e78\uff0c\u5373\u4f7f\u6211\u4eec\u4f7f\u7528\u540c\u4e00\u4e2a\u8f93\u5165\uff0c\u6307\u4ee4\u6570\u4e5f\u662f\u6709\u8f83\u5927\u53d8\u5316\u7684\uff0c\u4f7f\u7528\u73b0\u6709\u7684 pintool \u96be\u4ee5\u89e3\u51fa\u8fd9\u9053\u9898\u76ee\uff0c\u6211\u4eec\u8fdb\u884c\u66f4\u6df1\u4e00\u6b65\u7684\u5206\u6790\uff0c\u9a8c\u8bc1 flag \u7684\u5173\u952e\u90e8\u5206\u53ef\u4ee5\u8868\u793a\u4e3a\u5982\u4e0b\u4ee3\u7801  for   ( int   i = 0 ;   i < length ( provided_flag );   i ++ )  { \n     if   ( main_mapanic ( provided_flag [ i ])   !=   constant_binary_blob [ i ]) \n     { \n         bad_boy (); \n         exit (); \n     } \n     goodboy ();  }   \u53ef\u4ee5\u770b\u51fa\u5224\u65ad\u76f8\u7b49\u662f\u9010\u4f4d\u8fdb\u884c\u7684\uff0c\u56e0\u6b64\u53ef\u4ee5\u8003\u8651\u5bf9 inscount0 \u7684 docount \u51fd\u6570\u505a\u5982\u4e0b\u66f4\u6539  \u66f4\u6539\u524d\uff1a  VOID   docount ()   {   icount ++ ;   }  \u66f4\u6539\u540e\uff1a  VOID   docount ( void   * ip )   { \n     // .text:000000000047B96E  cmp al, cl; cmp mapanic(provided_flag[i]), constant_binary_blob[i] \n     if   (( long   long   int ) ip   ==   0x000000000047B96E ) \n      icount ++ ;   }   \u53ea\u6709\u8fd0\u884c\u5230 0x47B96E \u4e00\u53e5\u624d\u4f1a\u8ba1\u6570\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u6839\u636e pintool \u7684\u7ed3\u679c\u6765\u9010\u4f4d\u7206\u7834 flag \u4e86   \u7136\u800c\uff0c\u56e0\u4e3a\u8be5\u9898\u76ee\u7684\u6307\u4ee4\u8f83\u591a\uff0c\u6307\u4ee4\u7ea7\u522b\u7684\u63d2\u6869\u4f1a\u8017\u8d39\u8f83\u957f\u65f6\u95f4\uff0c\u9700\u89811h\u5de6\u53f3\u624d\u80fd\u5f97\u5230 flag",
            "title": "hxpCTF-2017-main_strip"
        },
        {
            "location": "/binary_core_tools/instrumentation/intel_pin/#_1",
            "text": "xman2018\u9009\u62d4\u8d5b-ollvm",
            "title": "\u9898\u76ee"
        },
        {
            "location": "/binary_core_tools/instrumentation/intel_pin/#_2",
            "text": "\u4f7f\u7528 intel pin \u53ef\u4ee5\u89e3\u4e00\u90e8\u5206 CTF challenges\uff0c\u5c24\u5176\u662f\u865a\u62df\u673a\u6216\u8005\u6df7\u6dc6\u4e25\u91cd\u7684\u9006\u5411\u9898\u76ee\uff0c\u4f46 pin \u7684\u7528\u9014\u7edd\u4e0d\u5c40\u9650\u4e8e\u6c42\u89e3 CTF challenges  \u4f7f\u7528 pin \u53ef\u4ee5\u89e3\u4e00\u90e8\u5206 CTF \u9898\u76ee\uff0c\u4f46\u4e5f\u4ec5\u4ec5\u662f\u4e00\u90e8\u5206\u9898\u76ee\uff0c\u591a\u6570\u9898\u76ee\u7531\u4e8e\u63d2\u6869\u4ee3\u4ef7\u5927\uff0c\u96be\u4ee5\u63d0\u53d6\u4fa7\u4fe1\u9053\u4fe1\u606f\uff0cpintool \u96be\u4ee5\u7f16\u5199\u7b49\u539f\u56e0\u4f7f\u7528 pin \u6c42\u89e3\u5f97\u4e0d\u507f\u5931\uff0c\u56e0\u6b64\u4f7f\u7528 pin \u6c42\u89e3 CTF challenges \u53ef\u4ee5\u603b\u7ed3\u4e3a\u4e0b\u6761\u539f\u5219\uff1a  \u80fd\u7528\u8840\u8d5a\uff0c\u51c9\u4e86\u4e0d\u4e8f",
            "title": "\u603b\u7ed3"
        },
        {
            "location": "/binary_core_tools/instrumentation/intel_pin/#reference",
            "text": "http://shell-storm.org/blog/A-binary-analysis-count-me-if-you-can/  http://brieflyx.me/2017/binary-analysis/intel-pin-intro/  http://eternal.red/2017/dont_panic-writeup/  https://github.com/0x01f/pin-in-CTF",
            "title": "Reference"
        }
    ]
}